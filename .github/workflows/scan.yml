name: scan
on:
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go (for ProjectDiscovery tools)
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Install tooling (nuclei + deps)
        run: |
          set -euo pipefail
          sudo apt-get update -y
          sudo apt-get install -y jq curl dnsutils python3 python3-pip unzip
          # PD tools
          go install -v github.com/projectdiscovery/httpx/cmd/httpx@latest
          go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest
          go install -v github.com/projectdiscovery/dnsx/cmd/dnsx@latest
          go install -v github.com/projectdiscovery/nuclei/v3/cmd/nuclei@latest
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
          nuclei -update-templates
          pip3 install --upgrade tldextract requests

      - name: Prepare workspace
        run: |
          set -euo pipefail
          mkdir -p findings state config/program_whitelist templates/poc_templates
          # seed state files if missing
          [ -f state/pain.json ] || echo '{}' > state/pain.json
          [ -f state/triage_learning.json ] || echo '{}' > state/triage_learning.json
          [ -f state/scan_metrics.json ] || echo '{}' > state/scan_metrics.json

      - name: Run scan
        env:
          GLOBAL_CONCURRENCY: "40"
          PER_TARGET_CONCURRENCY: "6"
        run: |
          set -euo pipefail
          bash scripts/discover.sh hosts.txt
          python3 scripts/extract_endpoints.py
          # Parallel per-target meat (CORS/redirect/takeover + nuclei)
          while read -r target; do
            [ -z "$target" ] && continue
            echo "[*] START $target"
            # background each target, cap concurrency
            (
              python3 scripts/cors_check.py "$target" || true
              bash scripts/redirect_fuzz.sh "$target" || true
              bash scripts/takeover_check.sh "$target" || true
              # nuclei focused buckets
              targets_file="findings/$target/live.txt"
              [ -s "$targets_file" ] && \
                nuclei -silent -rl 150 -retries 1 -nc \
                  -duc -t cves/ -t http/exposures/ -t http/vulnerabilities/ \
                  -t http/default-logins/ -t http/misconfiguration/ \
                  -target "$(cat "$targets_file")" \
                  -jsonl > "findings/$target/nuclei.jsonl" || true

              python3 scripts/validate_finding.py "$target" || true
              python3 scripts/package_evidence.py "$target" || true
              python3 scripts/auto_draft.py "$target" || true
              echo "[+] DONE $target"
            ) &
            # throttle per-target background jobs
            while [ "$(jobs -rp | wc -l)" -ge "${PER_TARGET_CONCURRENCY}" ]; do sleep 0.5; done
          done < hosts.txt
          wait
          echo "[*] SCAN COMPLETE"

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: findings
          path: findings
